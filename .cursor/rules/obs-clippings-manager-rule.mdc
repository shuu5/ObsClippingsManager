---
description: 
globs: 
alwaysApply: true
---
# ObsClippingsManager

## ルール

このルールを読み込んだら「ObsClippingsManagerを読み込みました！」と発言して。

- このPython環境はuvで管理されているのでuvを使用してパッケージ管理を行って。
- コードの実行は必ずルートディレクトリをカレントディレクトリとして行って。
- 開発は常にmainブランチで行って。
- 開発はTDDで行う。まず仕様に沿って必要なunit-testを作成し、それがpassするように必要なコードを書いて。
- 開発を行った後は、必要なunit-testの存在を確認してからそのunit-testを実行し、問題があれば修正して。
- unittestが問題なければ、その時点での実装と仕様書との整合性を確認し、不整合があれば仕様書を修正して。
- その後、staging, commit, pushを行って。
- commit commentは以下のルールに従って作成して。

### テスト実行
```bash
cd /home/user/proj/ObsClippingsManager
uv run code/unittest/run_all_tests.py 
```

### コミットメッセージルール
以下の形式でコミットメッセージを作成してください：
```
[種類]: 変更内容の簡潔な説明（50文字以内）

詳細説明（必要な場合のみ）
- 具体的な変更点
- 影響範囲
```

#### 種類の指定
- `feat`: 新機能追加時に使用
- `fix`: バグ修正時に使用
- `docs`: ドキュメント更新時に使用
- `style`: コードフォーマット変更時に使用
- `refactor`: リファクタリング時に使用
- `test`: テスト追加・修正時に使用
- `chore`: その他の変更時に使用
